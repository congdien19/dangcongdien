import React, { useState } from 'react';
import { FaFacebook } from 'react-icons/fa';
import './Dvfb.css';

const Dvfb = () => {
  const [link, setLink] = useState('');
  const [selectedServer, setSelectedServer] = useState('MC-1');
  const [quantity, setQuantity] = useState(100);
  const [pricePerFollow, setPricePerFollow] = useState(23);
  const [note, setNote] = useState('');
  const [multiOrder, setMultiOrder] = useState(false);

  const serverOptions = [
    {
      id: 'MC-1',
      name: 'MC-1',
      price: 23,
      description: 'TƒÉng Ng∆∞·ªùi Theo D√µi Ng∆∞·ªùi D√πng ~ L√™n Si√™u Nhanh ~ M√°y Ch·ªß X·ªãn Nh·∫•t ~ T√†i Nguy√™n Vi·ªát Nam üî•üî•üî• - 23ƒë/1 follow',
      badge: 'green'
    },
    {
      id: 'MC-2',
      name: 'MC-2',
      price: 16,
      description: 'TƒÉng Ng∆∞·ªùi Theo D√µi Via + Beta ~ L√™n Nhanh ~ B·∫£o H√†nh 7 Ng√†y ~ T√†i Nguy√™n Vi·ªát Nam üî•üî• - 16ƒë/1 follow',
      badge: 'blue'
    },
    {
      id: 'MC-3',
      name: 'MC-3',
      price: 35,
      description: 'TƒÉng Ng∆∞·ªùi Theo D√µi ~ D·∫°ng Beta ~ L√™n Nhanh ~ T√†i Nguy√™n Vi·ªát Nam üî•üî• - 35ƒë/1 follow',
      badge: 'orange'
    }
  ];

  const total = quantity * pricePerFollow;

  const handleServerChange = (server) => {
    setSelectedServer(server.id);
    setPricePerFollow(server.price);
  };

  return (
    <div className="dvfb-container">
      {/* Header */}
      <div className="dvfb-header">
        <div className="breadcrumb">
          <span className="facebook-icon"><FaFacebook /></span>
          FACEBOOK &gt;&gt; TƒÇNG NG∆Ø·ªúI THEO D√ïI
        </div>
        <div className="header-actions">
          <button className="btn-create-order">KH·ªûI T·∫†O ƒê∆†N H√ÄNG</button>
          <button className="btn-history">üîç L·ªäCH S·ª¨ ƒê∆†N H√ÄNG</button>
        </div>
      </div>

      <div className="dvfb-main-content">
        {/* Left Column - Form */}
        <div className="dvfb-form-column">
          <div className="form-section">
            <div className="form-group">
              <label>Link ho·∫∑c UID trang c√° nh√¢n:</label>
              <input 
                type="text" 
                value={link} 
                onChange={e => setLink(e.target.value)} 
                placeholder="https://facebook.com/abc ho·∫∑c UID" 
                className="form-input"
              />
            </div>

            <div className="checkbox-wrapper">
              <input 
                type="checkbox" 
                id="multi-order"
                checked={multiOrder}
                onChange={e => setMultiOrder(e.target.checked)}
              />
              <label htmlFor="multi-order">Mua nhi·ªÅu ƒë∆°n c√πng l√∫c</label>
            </div>

            <div className="server-section">
              <h4>Ch·ªçn m√°y ch·ªß:</h4>
              {serverOptions.map((server) => (
                <div key={server.id} className="server-option">
                  <label className="server-label">
                    <input 
                      type="radio" 
                      name="server" 
                      checked={selectedServer === server.id} 
                      onChange={() => handleServerChange(server)}
                    />
                    <span className={`server-badge ${server.badge}`}>{server.name}</span>
                    <span className="server-description">{server.description}</span>
                  </label>
                </div>
              ))}
            </div>

            <div className="form-row">
              <div className="form-group">
                <label>S·ªë l∆∞·ª£ng: (50 ~ 10000)</label>
                <input 
                  type="number" 
                  value={quantity} 
                  onChange={e => setQuantity(Number(e.target.value))}
                  className="form-input"
                  min="50"
                  max="10000"
                />
              </div>
              <div className="form-group">
                <label>S·ªë ti·ªÅn m·ªói t∆∞∆°ng t√°c:</label>
                <input 
                  type="number" 
                  value={pricePerFollow} 
                  className="form-input"
                  readOnly
                />
              </div>
            </div>

            <div className="form-group">
              <label>Ghi ch√∫:</label>
              <textarea 
                value={note} 
                onChange={e => setNote(e.target.value)} 
                placeholder="Ghi ch√∫ n·∫øu c·∫ßn"
                className="form-textarea"
              />
            </div>

            <div className="total-section">
              <div className="total-info">
                <p>T·ªïng thanh to√°n: <span className="total-amount">{total.toLocaleString()} ƒë</span></p>
                <p>B·∫°n s·∫Ω tƒÉng <strong>{quantity.toLocaleString()}</strong> s·ªë l∆∞·ª£ng v·ªõi gi√° <strong>{total.toLocaleString()} ƒë</strong></p>
              </div>
              <button className="btn-create-order-main">T·∫°o ƒë∆°n h√†ng</button>
              <p className="warning-text">*Vui l√≤ng ƒë·ªçc k·ªπ l∆∞u √Ω tr∆∞·ªõc khi mua ƒë·ªÉ tr√°nh l·ªói!</p>
            </div>
          </div>
        </div>

        {/* Right Column - Info Cards */}
        <div className="dvfb-info-column">
          <div className="info-card video-card">
            <h4>Video h∆∞·ªõng d·∫´n</h4>
            <div className="video-wrapper">
              <iframe
                width="100%"
                height="200"
                src="https://www.youtube.com/embed/YKtvHWlnVe8"
                title="H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng d·ªãch v·ª•"
                frameBorder="0"
                allowFullScreen
              />
            </div>
          </div>

          <div className="info-card blue-card">
            <h4>H∆∞·ªõng D·∫´n & Ghi Ch√∫:</h4>
            <ul>
              <li>D·ªãch v·ª• s·ª≠ d·ª•ng ng∆∞·ªùi th·∫≠t ‚Äì ch·∫•t l∆∞·ª£ng cao</li>
              <li>N·∫øu g·∫∑p l·ªói, li√™n h·ªá h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c x·ª≠ l√Ω nhanh</li>
              <li>Th·ªùi gian b·∫Øt ƒë·∫ßu: 0-30 ph√∫t</li>
              <li>T·ªëc ƒë·ªô: 100-500/ng√†y</li>
              <li>D·ªãch v·ª• ch·∫°y 24/7 kh√¥ng ngh·ªâ</li>
            </ul>
          </div>

          <div className="info-card red-card">
            <h4>L∆ØU √ù!</h4>
            <ul>
              <li>Kh√¥ng t·∫°o 2 ƒë∆°n cho c√πng 1 ID trong th·ªùi gian ng·∫Øn</li>
              <li>Kh√¥ng s·ª≠ d·ª•ng cho n·ªôi dung vi ph·∫°m ph√°p lu·∫≠t</li>
              <li>Kh√¥ng ho√†n ti·ªÅn n·∫øu vi ph·∫°m ƒëi·ªÅu kho·∫£n</li>
              <li>Ki·ªÉm tra k·ªπ UID tr∆∞·ªõc khi ƒë·∫∑t ƒë∆°n</li>
              <li>ƒê·∫£m b·∫£o t√†i kho·∫£n kh√¥ng ·ªü ch·∫ø ƒë·ªô ri√™ng t∆∞</li>
              <li>Vui l√≤ng ki·ªÉm tra link tr∆∞·ªõc khi mua</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Dvfb;
