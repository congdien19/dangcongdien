import React, { useState } from 'react';
import {
  Input,
  Radio,
  Alert,
  Button,
  Checkbox,
  Typography,
  Badge,
  Card,
  Row,
  Col,
  Divider
} from 'antd';
import { FaTiktok } from 'react-icons/fa';
import './DvTiktok.css';

const { TextArea } = Input;
const { Title, Text } = Typography;

const DvTiktok = () => {
  const [selectedOption, setSelectedOption] = useState(null);
  const [amount, setAmount] = useState(100);
  const [moneyPerView, setMoneyPerView] = useState(0);
  const [note, setNote] = useState('');
  const [schedule, setSchedule] = useState(false);
  const [repeat, setRepeat] = useState(false);

  const options = [
    {
      label: 'TƒÉng L∆∞·ª£t Xem Video Tiktok ~ L√™n Nhanh ~ Gi√° Si√™u R·∫ª ~ T√†i Nguy√™n Vi·ªát Nam üî•üî• - 0.004ƒë/1 view',
      value: 'MC-1',
      price: 0.004,
    },
    {
      label: 'TƒÉng L∆∞·ª£t Xem Video Tiktok ~ L√™n Nhanh ~ T√†i Nguy√™n Vi·ªát Nam üî• - 0.01ƒë/1 view',
      value: 'MC-2',
      price: 0.01,
    },
    {
      label: 'TƒÉng L∆∞·ª£t Xem Video Tiktok ~ T·ªâ L·ªá T·ª•t Th·∫•p ~ T√†i Nguy√™n Vi·ªát Nam üî• - 0.017ƒë/1 view',
      value: 'MC-3',
      price: 0.017,
    },
    {
      label: 'TƒÉng L∆∞·ª£t Xem Video Tiktok ~ Xu H∆∞·ªõng ~ Xem Video Trong 30 Gi√¢y ~ T√†i Nguy√™n Vi·ªát Nam üî•üî•üî• - 4.089ƒë/1 view',
      value: 'MC-4',
      price: 4.089,
    },
    {
      label: 'TƒÉng L∆∞·ª£t Xem Video B·∫Øt ƒê·∫ßu Nhanh ~ T√†i Nguy√™n Vi·ªát Nam - 2.5ƒë/1 view',
      value: 'MC-5',
      price: 2.5,
    },
  ];

  const handleOptionChange = (value) => {
    setSelectedOption(value);
    const selected = options.find(opt => opt.value === value);
    if (selected) {
      setMoneyPerView(selected.price);
    }
  };

  return (
    <div className="tiktok-full-container">
      <Card bordered={false} style={{ padding: '20px' }}>
        <Title level={4} style={{ textAlign: 'center', marginBottom: 30 }}>
          <FaTiktok style={{ marginRight: 8, color: '#000' }} />
          TIKTOK TƒÇNG L∆Ø·ª¢T XEM VIDEO
        </Title>

        <Row gutter={[16, 16]}>
          <Col span={24}>
            <Input placeholder="Nh·∫≠p Link Video c·∫ßn mua" size="large" />
          </Col>

          <Col span={24}>
            <Checkbox>Mua Nhi·ªÅu ƒê∆°n C√πng L√∫c ~ Ch·ªçn Tr∆∞·ªõc Khi Nh·∫≠p Danh S√°ch Link</Checkbox>
          </Col>

          <Col span={24}>
            <Radio.Group
              onChange={(e) => handleOptionChange(e.target.value)}
              value={selectedOption}
              style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}
            >
              {options.map((opt) => (
                <Radio value={opt.value} key={opt.value}>
                  <Badge color="green" text={opt.label} />
                </Radio>
              ))}
            </Radio.Group>
          </Col>

          <Col xs={24} sm={12}>
            <Input
              type="number"
              placeholder="S·ªë l∆∞·ª£ng"
              size="large"
              value={amount}
              onChange={(e) => setAmount(Number(e.target.value))}
            />
          </Col>

          <Col xs={24} sm={12}>
            <Input
              type="number"
              placeholder="S·ªë ti·ªÅn m·ªói t∆∞∆°ng t√°c"
              size="large"
              value={moneyPerView}
              onChange={(e) => setMoneyPerView(Number(e.target.value))}
            />
          </Col>

          <Col span={24}>
            <TextArea
              rows={4}
              placeholder="Ghi ch√∫ n·∫øu c·∫ßn"
              value={note}
              onChange={(e) => setNote(e.target.value)}
            />
          </Col>

          <Col span={24}>
            <Checkbox checked={schedule} onChange={() => setSchedule(!schedule)}>
              ƒê·∫∑t l·ªãch ch·∫°y M√∫i gi·ªù: +07:00
            </Checkbox>
            <br />
            <Checkbox checked={repeat} onChange={() => setRepeat(!repeat)}>
              ƒê·∫∑t h√†ng l·∫∑p l·∫°i. T·ª± ƒë·ªông ƒë·∫∑t l·∫°i ƒë∆°n h√†ng sau khi ƒë∆°n h√†ng n√†y HO√ÄN TH√ÄNH
            </Checkbox>
          </Col>

          <Col span={24}>
            <Alert
              message={
                <Text strong style={{ fontSize: 16 }}>
                  T·ªïng thanh to√°n: {(amount * moneyPerView).toLocaleString()}ƒë
                </Text>
              }
              description={`B·∫°n s·∫Ω tƒÉng ${amount} s·ªë l∆∞·ª£ng v·ªõi gi√° ${(amount * moneyPerView).toLocaleString()}ƒë`}
              type="info"
              showIcon
            />
          </Col>

          <Col span={24} style={{ textAlign: 'center' }}>
            <Button type="primary" size="large">T·∫°o ƒê∆°n H√†ng</Button>
          </Col>

          <Col span={24}>
            <Divider />
            <Alert
              className="warning-box"
              message="L∆ØU √ù!"
              description={
                <ul style={{ paddingLeft: 20 }}>
                  <li>1 ID kh√¥ng mua 2 ƒë∆°n c√πng l√∫c trong h·ªá th·ªëng !</li>
                  <li>Nghi√™m c·∫•m buff c√°c n·ªôi dung vi ph·∫°m ph√°p lu·∫≠t, ch√≠nh tr·ªã...</li>
                  <li>N·∫øu c√≥ t√¨nh tr·∫°ng h·ªá th·ªëng b√™n kh√¥ng ch·∫°y, n·∫øu c√≥ t√¨nh tr·∫°ng h·ª•t, th√¨ s·ªë l∆∞·ª£ng gi·ªØa 2 b√™n s·∫Ω kh√¥ng ƒë∆∞·ª£c x·ª≠ l√≠.</li>
                  <li>Ch√∫ng t√¥i s·∫Ω kh√¥ng th·ªÉ ho√†n ti·ªÅn n·∫øu sai link ho·∫∑c sai ID.</li>
                </ul>
              }
              type="error"
              showIcon
            />
          </Col>
        </Row>
      </Card>
    </div>
  );
};

export default DvTiktok;
